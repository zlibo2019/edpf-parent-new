<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weds.edmj.mapper.MjRuleRealMapper">
    <resultMap id="BaseResultMap" type="com.weds.edmj.entity.MjRuleRealEntity">
        <id column="rule_no" jdbcType="INTEGER" property="ruleNo"/>
        <result column="rule_name" jdbcType="NVARCHAR" property="ruleName"/>
        <result column="rule_count" jdbcType="INTEGER" property="ruleCount"/>
        <result column="sj" jdbcType="TIMESTAMP" property="sj"/>
        <result column="gly_no" jdbcType="NVARCHAR" property="glyNo"/>
        <result column="regserial" jdbcType="NVARCHAR" property="regserial"/>
    </resultMap>
    <sql id="Base_Column_List">
        rule_no, rule_name, rule_count, sj, gly_no, regserial
    </sql>
    <select id="selectMaxRuleNo" resultType="Map">
        select max(rule_no) + 1 as ruleNo
        from mj_rule_real
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_rule_real
        where rule_no = #{ruleNo,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mj_rule_real
        where rule_no = #{ruleNo,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.weds.edmj.entity.MjRuleRealEntity">
        insert into mj_rule_real (rule_no, rule_name, rule_count, sj, gly_no, regserial)
        values (#{ruleNo,jdbcType=INTEGER},
                #{ruleName,jdbcType=NVARCHAR},
                #{ruleCount,jdbcType=INTEGER},
                #{sj,jdbcType=TIMESTAMP},
                #{glyNo,jdbcType=NVARCHAR},
                #{regserial,jdbcType=NVARCHAR})
    </insert>
    <insert id="insertBatch" parameterType="List">
        insert into
        mj_rule_real
        (rule_no,rule_name,rule_count,sj,gly_no,regserial)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.ruleNo,jdbcType=INTEGER},#{item.ruleName,jdbcType=NVARCHAR},#{item.ruleCount,jdbcType=INTEGER},#{item.sj,jdbcType=TIMESTAMP},#{item.glyNo,jdbcType=NVARCHAR},#{item.regserial,jdbcType=NVARCHAR})
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.weds.edmj.entity.MjRuleRealEntity">
        insert into mj_rule_real
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ruleNo != null">
                rule_no,
            </if>
            <if test="ruleName != null">
                rule_name,
            </if>
            <if test="ruleCount != null">
                rule_count,
            </if>
            <if test="sj != null">
                sj,
            </if>
            <if test="glyNo != null">
                gly_no,
            </if>
            <if test="regserial != null">
                regserial,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ruleNo != null">
                #{ruleNo,jdbcType=INTEGER},
            </if>
            <if test="ruleName != null">
                #{ruleName,jdbcType=NVARCHAR},
            </if>
            <if test="ruleCount != null">
                #{ruleCount,jdbcType=INTEGER},
            </if>
            <if test="sj != null">
                #{sj,jdbcType=TIMESTAMP},
            </if>
            <if test="glyNo != null">
                #{glyNo,jdbcType=NVARCHAR},
            </if>
            <if test="regserial != null">
                #{regserial,jdbcType=NVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.weds.edmj.entity.MjRuleRealEntity">
        update mj_rule_real
        <set>
            <if test="ruleName != null">
                rule_name = #{ruleName,jdbcType=NVARCHAR},
            </if>
            <if test="ruleCount != null">
                rule_count = #{ruleCount,jdbcType=INTEGER},
            </if>
            <if test="sj != null">
                sj = #{sj,jdbcType=TIMESTAMP},
            </if>
            <if test="glyNo != null">
                gly_no = #{glyNo,jdbcType=NVARCHAR},
            </if>
            <if test="regserial != null">
                regserial = #{regserial,jdbcType=NVARCHAR},
            </if>
        </set>
        where rule_no = #{ruleNo,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.weds.edmj.entity.MjRuleRealEntity">
        update mj_rule_real
        set rule_name  = #{ruleName,jdbcType=NVARCHAR},
            rule_count = #{ruleCount,jdbcType=INTEGER},
            sj         = #{sj,jdbcType=TIMESTAMP},
            gly_no     = #{glyNo,jdbcType=NVARCHAR},
            regserial  = #{regserial,jdbcType=NVARCHAR}
        where rule_no = #{ruleNo,jdbcType=INTEGER}
    </update>
    <select id="selectListByEntity" parameterType="com.weds.edmj.entity.MjRuleRealEntity" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_rule_real
        <where>
            <if test="ruleNo != null">
                and rule_no = #{ruleNo,jdbcType=INTEGER}
            </if>
            <if test="ruleName != null">
                <bind name="ruleNameLike" value="'%'+ruleName+'%'"/>
                and rule_name like #{ruleNameLike}
                <!--and rule_name = #{ruleName,jdbcType=NVARCHAR}-->
            </if>
            <if test="ruleCount != null">
                and rule_count = #{ruleCount,jdbcType=INTEGER}
            </if>
            <if test="sj != null">
                and sj = #{sj,jdbcType=TIMESTAMP}
            </if>
            <if test="glyNo != null">
                <bind name="glyNoLike" value="'%'+glyNo+'%'"/>
                and gly_no like #{glyNoLike}
                <!--and gly_no = #{glyNo,jdbcType=NVARCHAR}-->
            </if>
            <if test="regserial != null">
                <bind name="regserialLike" value="'%'+regserial+'%'"/>
                and regserial like #{regserialLike}
                <!--and regserial = #{regserial,jdbcType=NVARCHAR}-->
            </if>
        </where>
    </select>
    <select id="selectListByKeys" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_rule_real
        <where>
            <if test="keys != null">
                <bind name="keysLike" value="'%'+keys+'%'"/>
                or rule_no = #{keys}
                or rule_name like #{keysLike}
                or rule_count = #{keys}
                or sj = #{keys}
                or gly_no like #{keysLike}
                or regserial like #{keysLike}
            </if>
        </where>
    </select>
    <delete id="deleteBatchByKeys" parameterType="List">
        delete from
        mj_rule_real
        where (rule_no) in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            (#{item.ruleNo})
        </foreach>
    </delete>
</mapper>