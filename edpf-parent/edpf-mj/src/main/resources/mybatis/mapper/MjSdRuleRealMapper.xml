<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weds.edmj.mapper.MjSdRuleRealMapper">
    <resultMap id="BaseResultMap" type="com.weds.edmj.entity.MjSdRuleRealEntity">
        <id column="xh" jdbcType="INTEGER" property="xh"/>
        <result column="rule_no" jdbcType="VARCHAR" property="ruleNo"/>
        <result column="sd_no" jdbcType="VARCHAR" property="sdNo"/>
        <result column="sd_level" jdbcType="INTEGER" property="sdLevel"/>
        <result column="sj" jdbcType="TIMESTAMP" property="sj"/>
        <result column="gly_no" jdbcType="NVARCHAR" property="glyNo"/>
        <result column="regserial" jdbcType="NVARCHAR" property="regserial"/>
        <result column="sd_rela" jdbcType="INTEGER" property="sdRela"/>
    </resultMap>
    <sql id="Base_Column_List">
        xh, rule_no, sd_no, sd_level, sj, gly_no, regserial, sd_rela
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_sd_rule_real
        where xh = #{xh,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mj_sd_rule_real
        where xh = #{xh,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByCondition" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity">
        delete from mj_sd_rule_real
        where rule_no = #{ruleNo,jdbcType=VARCHAR}
          and sd_no = #{sdNo,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity">
        <selectKey keyProperty="xh" order="AFTER" resultType="java.lang.Integer">
            SELECT SCOPE_IDENTITY()
        </selectKey>
        insert into mj_sd_rule_real (rule_no, sd_no, sd_level,
        sj, gly_no, regserial,
        sd_rela)
        values (#{ruleNo,jdbcType=VARCHAR}, #{sdNo,jdbcType=VARCHAR}, #{sdLevel,jdbcType=INTEGER},
        #{sj,jdbcType=TIMESTAMP}, #{glyNo,jdbcType=NVARCHAR}, #{regserial,jdbcType=NVARCHAR},
        #{sdRela,jdbcType=INTEGER})
    </insert>
    <insert id="insertBatch" parameterType="List">
        insert into
        mj_sd_rule_real
        (xh,rule_no,sd_no,sd_level,sj,gly_no,regserial,sd_rela)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.xh,jdbcType=INTEGER},#{item.ruleNo,jdbcType=VARCHAR},#{item.sdNo,jdbcType=VARCHAR},#{item.sdLevel,jdbcType=INTEGER},#{item.sj,jdbcType=TIMESTAMP},#{item.glyNo,jdbcType=NVARCHAR},#{item.regserial,jdbcType=NVARCHAR},#{item.sdRela,jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity">
        <selectKey keyProperty="xh" order="AFTER" resultType="java.lang.Integer">
            SELECT SCOPE_IDENTITY()
        </selectKey>
        insert into mj_sd_rule_real
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ruleNo != null">
                rule_no,
            </if>
            <if test="sdNo != null">
                sd_no,
            </if>
            <if test="sdLevel != null">
                sd_level,
            </if>
            <if test="sj != null">
                sj,
            </if>
            <if test="glyNo != null">
                gly_no,
            </if>
            <if test="regserial != null">
                regserial,
            </if>
            <if test="sdRela != null">
                sd_rela,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ruleNo != null">
                #{ruleNo,jdbcType=VARCHAR},
            </if>
            <if test="sdNo != null">
                #{sdNo,jdbcType=VARCHAR},
            </if>
            <if test="sdLevel != null">
                #{sdLevel,jdbcType=INTEGER},
            </if>
            <if test="sj != null">
                #{sj,jdbcType=TIMESTAMP},
            </if>
            <if test="glyNo != null">
                #{glyNo,jdbcType=NVARCHAR},
            </if>
            <if test="regserial != null">
                #{regserial,jdbcType=NVARCHAR},
            </if>
            <if test="sdRela != null">
                #{sdRela,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity">
        update mj_sd_rule_real
        <set>
            <if test="ruleNo != null">
                rule_no = #{ruleNo,jdbcType=VARCHAR},
            </if>
            <if test="sdNo != null">
                sd_no = #{sdNo,jdbcType=VARCHAR},
            </if>
            <if test="sdLevel != null">
                sd_level = #{sdLevel,jdbcType=INTEGER},
            </if>
            <if test="sj != null">
                sj = #{sj,jdbcType=TIMESTAMP},
            </if>
            <if test="glyNo != null">
                gly_no = #{glyNo,jdbcType=NVARCHAR},
            </if>
            <if test="regserial != null">
                regserial = #{regserial,jdbcType=NVARCHAR},
            </if>
            <if test="sdRela != null">
                sd_rela = #{sdRela,jdbcType=INTEGER},
            </if>
        </set>
        where xh = #{xh,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity">
        update mj_sd_rule_real
        set rule_no   = #{ruleNo,jdbcType=VARCHAR},
            sd_no     = #{sdNo,jdbcType=VARCHAR},
            sd_level  = #{sdLevel,jdbcType=INTEGER},
            sj        = #{sj,jdbcType=TIMESTAMP},
            gly_no    = #{glyNo,jdbcType=NVARCHAR},
            regserial = #{regserial,jdbcType=NVARCHAR},
            sd_rela   = #{sdRela,jdbcType=INTEGER}
        where xh = #{xh,jdbcType=INTEGER}
    </update>
    <select id="selectListByEntity" parameterType="com.weds.edmj.entity.MjSdRuleRealEntity" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_sd_rule_real
        <where>
            <if test="xh != null">
                and xh = #{xh,jdbcType=INTEGER}
            </if>
            <if test="ruleNo != null">
                <bind name="ruleNoLike" value="'%'+ruleNo+'%'"/>
                and rule_no like #{ruleNoLike}
                <!--and rule_no = #{ruleNo,jdbcType=VARCHAR}-->
            </if>
            <if test="sdNo != null">
                <bind name="sdNoLike" value="'%'+sdNo+'%'"/>
                and sd_no like #{sdNoLike}
                <!--and sd_no = #{sdNo,jdbcType=VARCHAR}-->
            </if>
            <if test="sdLevel != null">
                and sd_level = #{sdLevel,jdbcType=INTEGER}
            </if>
            <if test="sj != null">
                and sj = #{sj,jdbcType=TIMESTAMP}
            </if>
            <if test="glyNo != null">
                <bind name="glyNoLike" value="'%'+glyNo+'%'"/>
                and gly_no like #{glyNoLike}
                <!--and gly_no = #{glyNo,jdbcType=NVARCHAR}-->
            </if>
            <if test="regserial != null">
                <bind name="regserialLike" value="'%'+regserial+'%'"/>
                and regserial like #{regserialLike}
                <!--and regserial = #{regserial,jdbcType=NVARCHAR}-->
            </if>
            <if test="sdRela != null">
                and sd_rela = #{sdRela,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectListByKeys" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_sd_rule_real
        <where>
            <if test="keys != null">
                <bind name="keysLike" value="'%'+keys+'%'"/>
                or xh = #{keys}
                or rule_no like #{keysLike}
                or sd_no like #{keysLike}
                or sd_level = #{keys}
                or sj = #{keys}
                or gly_no like #{keysLike}
                or regserial like #{keysLike}
                or sd_rela = #{keys}
            </if>
        </where>
    </select>
    <delete id="deleteBatchByKeys" parameterType="List">
        delete from
        mj_sd_rule_real
        where (xh) in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            (#{item.xh})
        </foreach>
    </delete>
</mapper>